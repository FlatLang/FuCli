package "flatlang/fucli"

class {
  public construct(
    visible CliArg[] args
  ) {

  }

  public parse(List<String> strArgs) {
    let argsIterator = strArgs.iterator

    while (argsIterator.hasNext) {
      let value = argsIterator.stepNext

      if (let arg = getArg(value)) {
        arg.enabled = true

        var Int i = 0

        while (argsIterator.hasNext) {
          if (arg.maxCount != -1 && i++ > arg.maxCount) {
            throw InvalidCliArgumentException(argsIterator.current)
          }

          if (arg.values.count >= arg.minCount && getArg(argsIterator.next)) {
            break
          }

          arg.values.add(argsIterator.stepNext)
        }

        if (arg.values.count < arg.minCount) {
          throw InvalidCliArgumentException(value)
        }
      } else {
        throw InvalidCliArgumentException(value)
      }
    }
  }

  getArg(String value) => args.firstWhere({ _.matches(value) })

  class InvalidCliArgumentException extends Exception {
    public construct(String argument) => super("Invalid CLI argument: '#argument'")
  }
}